name: ci
on:
  push:
    branches:
    - master
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v1
      env:
        cache-name: m2
      with:
        path: ~/.m2/repository
        key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ env.cache-name }}-
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: |
        mvn --batch-mode verify sonar:sonar \
        -Dsonar.login=${SONAR_TOKEN} \
        -Dsonar.host.url=${SONAR_URL} \
        -Dsonar.organization=${GITHUB_REPOSITORY_OWNER} \
        -Dsonar.projectKey=${GITHUB_REPOSITORY/\//_}
      env:
        SONAR_URL: https://sonarcloud.io
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v1
      with:
        name: target
        path: target
  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: target
        path: target
    - run: sudo apt-get install --yes --no-install-recommends libxml-xpath-perl
    - run: |
        ARTIFACT_ID=$(xpath -q -e "/project/artifactId/text()" pom.xml)
        echo "::set-env name=ARTIFACT_ID::${ARTIFACT_ID}"
        VERSION=$(xpath -q -e "/project/version/text()" pom.xml)
        echo "::set-env name=VERSION::${VERSION}"
    - run: echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY_OWNER} --password-stdin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: docker build --tag docker.pkg.github.com/${GITHUB_REPOSITORY}/${ARTIFACT_ID}:${VERSION} .
    - run: docker push docker.pkg.github.com/${GITHUB_REPOSITORY}/${ARTIFACT_ID}:${VERSION}
